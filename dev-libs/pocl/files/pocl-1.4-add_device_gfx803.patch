diff --git a/lib/CL/devices/hsa/pocl-hsa.c b/lib/CL/devices/hsa/pocl-hsa.c
index e0c228ee..63ba9890 100644
--- a/lib/CL/devices/hsa/pocl-hsa.c
+++ b/lib/CL/devices/hsa/pocl-hsa.c
@@ -363,7 +363,7 @@ setup_agent_memory_regions_callback(hsa_region_t region, void* data)
 
 /* HSA unsupported device features are hard coded in a known Agent
    list and detected by the advertised agent name string. */
-#define HSA_NUM_KNOWN_HSA_AGENTS 2
+#define HSA_NUM_KNOWN_HSA_AGENTS 3
 
 static const char *default_native_final_linkage_flags[] =
   {"-nostartfiles", HOST_LD_FLAGS_ARRAY, NULL};
@@ -440,7 +440,38 @@ static struct _cl_device_id supported_hsa_devices[HSA_NUM_KNOWN_HSA_AGENTS]
                 .native_vector_width_double = 16,
                 .final_linkage_flags = default_native_final_linkage_flags,
                 .device_aux_functions
-                = (HSAIL_ENABLED ? NULL : phsa_native_device_aux_funcs) } };
+                = (HSAIL_ENABLED ? NULL : phsa_native_device_aux_funcs) },
+	[2] = { .long_name = "gfx803",
+                .llvm_cpu = (HSAIL_ENABLED ? NULL : "gfx803"),
+                .llvm_target_triplet
+                = (HSAIL_ENABLED ? "hsail64" : "amdgcn--amdhsa"),
+                .spmd = CL_TRUE,
+                .autolocals_to_args = CL_FALSE,
+                .device_alloca_locals = CL_FALSE,
+                .context_as_id = SPIR_ADDRESS_SPACE_GLOBAL,
+                .args_as_id = SPIR_ADDRESS_SPACE_GLOBAL,
+                .has_64bit_long = 1,
+                .vendor_id = AMD_VENDOR_ID,
+                .global_mem_cache_type = CL_READ_WRITE_CACHE,
+                .max_constant_buffer_size = 3650722201,
+                .local_mem_type = CL_LOCAL,
+                .endian_little = CL_TRUE,
+                .extensions = HSA_DEVICE_EXTENSIONS,
+                .device_side_printf = !HSAIL_ENABLED,
+                .printf_buffer_size = 4 * 1024 * 1024,
+                .preferred_wg_size_multiple = 64, // wavefront size on Kaveri
+                .preferred_vector_width_char = 4,
+                .preferred_vector_width_short = 2,
+                .preferred_vector_width_int = 1,
+                .preferred_vector_width_long = 1,
+                .preferred_vector_width_float = 1,
+                .preferred_vector_width_double = 1,
+                .native_vector_width_char = 4,
+                .native_vector_width_short = 2,
+                .native_vector_width_int = 1,
+                .native_vector_width_long = 1,
+                .native_vector_width_float = 1,
+                .native_vector_width_double = 1 } };
 
 char *
 pocl_hsa_build_hash (cl_device_id device)
